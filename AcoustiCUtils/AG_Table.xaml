<Window x:Class="AcoustiCUtils.AG_Table"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:AcoustiCUtils"
             mc:Ignorable="d"    
        Height="680" MinHeight = "680" MaxHeight="680"  MaxWidth="900" MinWidth = "900" WindowStartupLocation="CenterScreen" BorderBrush="Transparent" 
        
    HorizontalAlignment="Center" VerticalAlignment="Center" WindowStyle="None" MouseDown="Drag" d:DesignWidth="680" >
    <Window.Background>
        <ImageBrush ImageSource="C:/ProgramData/Autodesk/Revit/Addins/2022/AcousticConstructor/images/fon.png" ></ImageBrush>
    </Window.Background>
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="0" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyleRounded" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="10" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#87CEFA"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#87CEFA"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#87CEFA"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#87CEFA"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="GridStyle" />

        <Style TargetType="TabItem">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Margin" Value="0 0 5 0"/>
            <Setter Property="Padding" Value="15"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Width" Value ="200"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Grid SnapsToDevicePixels="True">
                            <Border CornerRadius="5"
                                   Background="{TemplateBinding Background}"
                                   BorderThickness="{TemplateBinding BorderThickness}"
                                   BorderBrush="{TemplateBinding BorderBrush}"
                                   Margin="{TemplateBinding Margin}"
                                   Padding="{TemplateBinding Padding}"/>
                            <ContentPresenter x:Name="contentPresenter"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              SnapsToDevicePixels="True"
                                              RecognizesAccessKey="True"
                                              Margin="{TemplateBinding Margin}"
                                              ContentSource="Header"
                                              Focusable="False"/>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="White"/>
                                <Setter Property="Foreground" Value="LightGray"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{StaticResource {x:Static SystemColors.ActiveCaptionColorKey}}"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TabControl">

        </Style>

    </Window.Resources>


    <Grid Style="{DynamicResource GridStyle}" MouseDown="Drag" Height="450"  Width="870"  >

        <!--LogoAG-->
        <Image Source="C:/ProgramData/Autodesk/Revit/Addins/2022/AcousticConstructor\images\logoAG.png" Margin="10,-103,700,491"/>
        <!--Кнопка ЗАКРЫТИЕ-->
        <Button Style="{DynamicResource ButtonStyleRounded}" Foreground="White"  Content = "Х" FontStyle="Normal" FontSize="13" Click="Button_ClickCancel" 
                Background="#FD7C6E" Margin="841,-104,9,535" />
        <!--Кнопка СКРЫТИЕ-->
        <Button Style="{DynamicResource ButtonStyleRounded}" Foreground="White"  Content = "l" FontStyle="Normal" FontSize="9" Click="Button_Clean"  
                Background="CornflowerBlue" Margin="815,-104,35,534" FontWeight="Bold" RenderTransformOrigin="0.5,0.5" >
            <Button.RenderTransform>
                <RotateTransform Angle="90"/>
            </Button.RenderTransform>
        </Button>


        <TextBlock FontSize="20" Margin="265,-68,214,492" FontFamily="Arial" FontStyle="Normal" Foreground="#FF4788E0" ><Run Text="Спецификация "/><Run Text="продуктов"/><Run Text=" Acoustic"/><Run Language="ru-ru" Text=" "/><Run Text="Group"/></TextBlock>

        <StackPanel Margin="-11,-26,-12,-70" Visibility="Visible" >

            <TextBlock Text="Ведомость конструкций" Foreground="#FF4788E0" FontSize="15" FontWeight="Light" FontFamily="Arial" Width="862"/>

            <!--Таблица ведомости конструкций-->
            <DataGrid x:Name="ConstrListTable" BorderBrush="Transparent" FontFamily="Arial" Grid.Row="0" AutoGenerateColumns="False"  
                HorizontalContentAlignment="Center" Height="200" MaxHeight="200" MinHeight = "164" Margin="5,0,5,5" HorizontalGridLinesBrush="#f0f0f1" VerticalGridLinesBrush="#f0f0f1" Width="880">
                <DataGrid.Background >
                    <ImageBrush/>
                </DataGrid.Background>
                <DataGrid.Columns>
                    <DataGridTextColumn Binding ="{Binding Id}" IsReadOnly="True" Header="№" Width="25" />
                    <DataGridTextColumn Binding ="{Binding Name}" IsReadOnly="True" Header="Наименование" Width="410" />
                    <DataGridTextColumn Binding ="{Binding Units}" IsReadOnly="True" Header="Ед.изм." Width="50"/>
                    <DataGridTextColumn Binding ="{Binding Quantity}" IsReadOnly="True" Header="Кол-во" Width="50">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding ="{Binding Weight}" IsReadOnly="False" Header="Масса" Width="60">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding ="{Binding Discription}" IsReadOnly="False" Header="Примечание" Width="*"/>
                </DataGrid.Columns>
            </DataGrid>
            <TextBlock Text="Ведомость материалов" Foreground="#FF4788E0" FontSize="15" FontWeight="ExtraLight" FontFamily="Arial" Width="866"/>


            <!--Таблица материалов-->
            <DataGrid  x:Name="ProductsListTable" FontFamily="Arial" BorderThickness="2"  AutoGenerateColumns="False"  
HorizontalContentAlignment="Center" Height="300" MaxHeight="300" RowBackground="white" HorizontalGridLinesBrush="#f0f0f1" VerticalGridLinesBrush="#f0f0f1" IsSynchronizedWithCurrentItem="False" Foreground="Black" Width="880" >
                <DataGrid.BorderBrush>
                    <ImageBrush Stretch="None" TileMode="None"/>
                </DataGrid.BorderBrush>
                <DataGrid.Background >
                    <ImageBrush/>
                </DataGrid.Background>

                <DataGrid.Columns>
                    <DataGridTextColumn Binding ="{Binding Id}" IsReadOnly="True" Header="№" Width="25" />
                    <DataGridTextColumn Binding ="{Binding Name}" IsReadOnly="True" Header="Наименование" Width="400" />
                    <DataGridTextColumn Binding ="{Binding Units}" IsReadOnly="True" Header="Ед.изм." Width="50"/>
                    <DataGridTextColumn Binding ="{Binding Quantity}" IsReadOnly="True" Header="Кол-во" Width="50">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding ="{Binding Code}" IsReadOnly="True" Header="Артикул" Width="75" >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn  Binding ="{Binding InfoPack}" IsReadOnly="True" Header="Примечание" Width="*"/>
                </DataGrid.Columns>
            </DataGrid>

        </StackPanel>
        
        <!--Кнопка Excel-->
        <Button Style="{DynamicResource ButtonStyleRounded}"  Content = "Excel"  FontStyle="Normal" FontSize="13" Click="Button_Click" Background="#FF19A071" Foreground="White" Margin="786,525,24,-97" />

    </Grid>

</Window>

